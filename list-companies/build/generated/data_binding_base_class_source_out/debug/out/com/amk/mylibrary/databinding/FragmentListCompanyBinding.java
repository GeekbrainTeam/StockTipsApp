// Generated by view binder compiler. Do not edit!
package com.amk.mylibrary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.ProgressBar;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.recyclerview.widget.RecyclerView;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.amk.mylibrary.R;
import com.google.android.material.floatingactionbutton.ExtendedFloatingActionButton;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class FragmentListCompanyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final ExtendedFloatingActionButton bottomFilterCompany;

  @NonNull
  public final ExtendedFloatingActionButton bottomSortCompany;

  @NonNull
  public final ConstraintLayout constraintExternal;

  @NonNull
  public final ProgressBar progressBar;

  @NonNull
  public final RecyclerView recyclerViewCompanies;

  private FragmentListCompanyBinding(@NonNull ConstraintLayout rootView,
      @NonNull ExtendedFloatingActionButton bottomFilterCompany,
      @NonNull ExtendedFloatingActionButton bottomSortCompany,
      @NonNull ConstraintLayout constraintExternal, @NonNull ProgressBar progressBar,
      @NonNull RecyclerView recyclerViewCompanies) {
    this.rootView = rootView;
    this.bottomFilterCompany = bottomFilterCompany;
    this.bottomSortCompany = bottomSortCompany;
    this.constraintExternal = constraintExternal;
    this.progressBar = progressBar;
    this.recyclerViewCompanies = recyclerViewCompanies;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static FragmentListCompanyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static FragmentListCompanyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.fragment_list_company, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static FragmentListCompanyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_filter_company;
      ExtendedFloatingActionButton bottomFilterCompany = ViewBindings.findChildViewById(rootView, id);
      if (bottomFilterCompany == null) {
        break missingId;
      }

      id = R.id.bottom_sort_company;
      ExtendedFloatingActionButton bottomSortCompany = ViewBindings.findChildViewById(rootView, id);
      if (bottomSortCompany == null) {
        break missingId;
      }

      ConstraintLayout constraintExternal = (ConstraintLayout) rootView;

      id = R.id.progress_bar;
      ProgressBar progressBar = ViewBindings.findChildViewById(rootView, id);
      if (progressBar == null) {
        break missingId;
      }

      id = R.id.recycler_view_companies;
      RecyclerView recyclerViewCompanies = ViewBindings.findChildViewById(rootView, id);
      if (recyclerViewCompanies == null) {
        break missingId;
      }

      return new FragmentListCompanyBinding((ConstraintLayout) rootView, bottomFilterCompany,
          bottomSortCompany, constraintExternal, progressBar, recyclerViewCompanies);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

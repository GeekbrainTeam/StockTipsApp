// Generated by view binder compiler. Do not edit!
package com.amk.mylibrary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.TextView;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.constraintlayout.widget.Guideline;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.amk.mylibrary.R;
import com.google.android.material.checkbox.MaterialCheckBox;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class ItemCompanyBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final TextView briefNameCompany;

  @NonNull
  public final TextView changePrice;

  @NonNull
  public final MaterialCheckBox checkBoxFavorite;

  @NonNull
  public final ConstraintLayout constraintItem;

  @NonNull
  public final Guideline guideline;

  @NonNull
  public final Guideline guideline2;

  @NonNull
  public final TextView nameCompany;

  @NonNull
  public final TextView nominalPrice;

  private ItemCompanyBinding(@NonNull ConstraintLayout rootView, @NonNull TextView briefNameCompany,
      @NonNull TextView changePrice, @NonNull MaterialCheckBox checkBoxFavorite,
      @NonNull ConstraintLayout constraintItem, @NonNull Guideline guideline,
      @NonNull Guideline guideline2, @NonNull TextView nameCompany,
      @NonNull TextView nominalPrice) {
    this.rootView = rootView;
    this.briefNameCompany = briefNameCompany;
    this.changePrice = changePrice;
    this.checkBoxFavorite = checkBoxFavorite;
    this.constraintItem = constraintItem;
    this.guideline = guideline;
    this.guideline2 = guideline2;
    this.nameCompany = nameCompany;
    this.nominalPrice = nominalPrice;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static ItemCompanyBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static ItemCompanyBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.item_company, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static ItemCompanyBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.brief_name_company;
      TextView briefNameCompany = ViewBindings.findChildViewById(rootView, id);
      if (briefNameCompany == null) {
        break missingId;
      }

      id = R.id.change_price;
      TextView changePrice = ViewBindings.findChildViewById(rootView, id);
      if (changePrice == null) {
        break missingId;
      }

      id = R.id.checkBox_favorite;
      MaterialCheckBox checkBoxFavorite = ViewBindings.findChildViewById(rootView, id);
      if (checkBoxFavorite == null) {
        break missingId;
      }

      ConstraintLayout constraintItem = (ConstraintLayout) rootView;

      id = R.id.guideline;
      Guideline guideline = ViewBindings.findChildViewById(rootView, id);
      if (guideline == null) {
        break missingId;
      }

      id = R.id.guideline2;
      Guideline guideline2 = ViewBindings.findChildViewById(rootView, id);
      if (guideline2 == null) {
        break missingId;
      }

      id = R.id.name_company;
      TextView nameCompany = ViewBindings.findChildViewById(rootView, id);
      if (nameCompany == null) {
        break missingId;
      }

      id = R.id.nominal_price;
      TextView nominalPrice = ViewBindings.findChildViewById(rootView, id);
      if (nominalPrice == null) {
        break missingId;
      }

      return new ItemCompanyBinding((ConstraintLayout) rootView, briefNameCompany, changePrice,
          checkBoxFavorite, constraintItem, guideline, guideline2, nameCompany, nominalPrice);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}

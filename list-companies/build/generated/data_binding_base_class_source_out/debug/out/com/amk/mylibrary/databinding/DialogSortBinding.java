// Generated by view binder compiler. Do not edit!
package com.amk.mylibrary.databinding;

import android.view.LayoutInflater;
import android.view.View;
import android.view.ViewGroup;
import android.widget.Button;
import android.widget.RadioButton;
import android.widget.RadioGroup;
import androidx.annotation.NonNull;
import androidx.annotation.Nullable;
import androidx.appcompat.widget.AppCompatSpinner;
import androidx.constraintlayout.widget.ConstraintLayout;
import androidx.viewbinding.ViewBinding;
import androidx.viewbinding.ViewBindings;
import com.amk.mylibrary.R;
import java.lang.NullPointerException;
import java.lang.Override;
import java.lang.String;

public final class DialogSortBinding implements ViewBinding {
  @NonNull
  private final ConstraintLayout rootView;

  @NonNull
  public final Button bottomAttachSorting;

  @NonNull
  public final RadioButton radioChangePercent;

  @NonNull
  public final RadioButton radioChangePrice;

  @NonNull
  public final RadioGroup radioGroupSorting;

  @NonNull
  public final RadioButton radioNameCompany;

  @NonNull
  public final RadioButton radioPrice;

  @NonNull
  public final AppCompatSpinner upDown;

  private DialogSortBinding(@NonNull ConstraintLayout rootView, @NonNull Button bottomAttachSorting,
      @NonNull RadioButton radioChangePercent, @NonNull RadioButton radioChangePrice,
      @NonNull RadioGroup radioGroupSorting, @NonNull RadioButton radioNameCompany,
      @NonNull RadioButton radioPrice, @NonNull AppCompatSpinner upDown) {
    this.rootView = rootView;
    this.bottomAttachSorting = bottomAttachSorting;
    this.radioChangePercent = radioChangePercent;
    this.radioChangePrice = radioChangePrice;
    this.radioGroupSorting = radioGroupSorting;
    this.radioNameCompany = radioNameCompany;
    this.radioPrice = radioPrice;
    this.upDown = upDown;
  }

  @Override
  @NonNull
  public ConstraintLayout getRoot() {
    return rootView;
  }

  @NonNull
  public static DialogSortBinding inflate(@NonNull LayoutInflater inflater) {
    return inflate(inflater, null, false);
  }

  @NonNull
  public static DialogSortBinding inflate(@NonNull LayoutInflater inflater,
      @Nullable ViewGroup parent, boolean attachToParent) {
    View root = inflater.inflate(R.layout.dialog_sort, parent, false);
    if (attachToParent) {
      parent.addView(root);
    }
    return bind(root);
  }

  @NonNull
  public static DialogSortBinding bind(@NonNull View rootView) {
    // The body of this method is generated in a way you would not otherwise write.
    // This is done to optimize the compiled bytecode for size and performance.
    int id;
    missingId: {
      id = R.id.bottom_attach_sorting;
      Button bottomAttachSorting = ViewBindings.findChildViewById(rootView, id);
      if (bottomAttachSorting == null) {
        break missingId;
      }

      id = R.id.radio_change_percent;
      RadioButton radioChangePercent = ViewBindings.findChildViewById(rootView, id);
      if (radioChangePercent == null) {
        break missingId;
      }

      id = R.id.radio_change_price;
      RadioButton radioChangePrice = ViewBindings.findChildViewById(rootView, id);
      if (radioChangePrice == null) {
        break missingId;
      }

      id = R.id.radio_group_sorting;
      RadioGroup radioGroupSorting = ViewBindings.findChildViewById(rootView, id);
      if (radioGroupSorting == null) {
        break missingId;
      }

      id = R.id.radio_name_company;
      RadioButton radioNameCompany = ViewBindings.findChildViewById(rootView, id);
      if (radioNameCompany == null) {
        break missingId;
      }

      id = R.id.radio_price;
      RadioButton radioPrice = ViewBindings.findChildViewById(rootView, id);
      if (radioPrice == null) {
        break missingId;
      }

      id = R.id.up_down;
      AppCompatSpinner upDown = ViewBindings.findChildViewById(rootView, id);
      if (upDown == null) {
        break missingId;
      }

      return new DialogSortBinding((ConstraintLayout) rootView, bottomAttachSorting,
          radioChangePercent, radioChangePrice, radioGroupSorting, radioNameCompany, radioPrice,
          upDown);
    }
    String missingId = rootView.getResources().getResourceName(id);
    throw new NullPointerException("Missing required view with ID: ".concat(missingId));
  }
}
